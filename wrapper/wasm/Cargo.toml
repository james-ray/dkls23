[package]
name = "dkls-wasm"
version = "0.1.0"
authors = ["Artem Mironov <artem.mironov@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = "0.2.88"
wasm-bindgen-futures = "0.4"
serde-wasm-bindgen = "0.6.0"
js-sys = "0.3"
dkls23 = { path = "../..", default-features = false }
sl-mpc-mate = { workspace = true }
k256 = { workspace = true }
rand = { workspace = true }
hex = "0.4"
serde = "1.0"
serde_bytes = "0.11"
derivation-path = { workspace = true }
tracing.workspace = true
tracing-wasm = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }


[dependencies.web-sys]
version = "0.3"
features = [
  "AbortController",
  "AbortSignal",
  "Crypto",
  "CryptoKey",
  "CryptoKeyPair",
  "SubtleCrypto",
  # "BinaryType",
  # "Blob",
  # "ErrorEvent",
  # "MessageEvent",
  # "ProgressEvent",
  # "WebSocket",
]

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

# [profile.release]
# # Tell `rustc` to optimize for small code size.
# opt-level = "s"
